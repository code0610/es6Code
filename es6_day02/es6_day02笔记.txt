es6介绍
es6变量的定义： 
  块级作用域: {}
  var     全局变量
  let 	 只在定义let变量的代码块中起作用,不能重复声明变量 
  const   常量    不能修改值，并且声明的时候要赋初始值
es6解构 
  1.数组解构  /按照元素在数组中的位置顺序取值  
	1>数组解构1-1
	   {
			let a,b;
			[a,b] = [1,2]
	   }
	2>数组解构1-2
	   {
			let a,b,rest;
			[a,b,...rest] = [1,2,3,4,5,6]
			console.log(rest)
	   }
  对象解构和数组解构的区别:对象解构赋值  以  属性名来匹配值,数组解构赋值   以元素的位置来匹配
  2.对象解构     
	1>对象解构 2-1   /没有位置，变量必须与属性同名才能取值
	   {
			let {a,b} = {a:1,b:2}
			console.log(a,b)
	   }
	2>对象解构 2-2    /使用自己定义的变量来匹配对象中的值 
                  {
			let {foo:baz} = {foo:"zhou",bar:"bb"}
	  }
	3>对象解构 2-3    /对象的嵌套赋值解构
	  {
		let obj = {  p:['hello',{y:'world'}]};
		let {p:[x,{y}]} = obj;
		x  //hello
		y  //world  
	 }
	   
  3.函数中的解构  
            function c(){
                 return [1,2]
            }
            
            let [a,b] =c();
            console.log(a,b);
	
函数 
   默认参数:
      function test(x,y=10){
			//y默认参数
	  }
   剩余参数:   
      function test(x,y,...z){
			//z剩余参数
	  }
	  test(1,2,3,4,5)
	  
  箭头函数  
                   箭头函数是es5匿名函数的简写   
                语法:    (行参)  =>  {函数体}      ->  function(形参){函数体}   
		注意:1.如果形参的个数只有一个，可以省略掉()
		        2.如果函数体只有一行代码，可以省略掉{}
		        3.如果最有一行返回值代码， 可以省略掉{}和return关键字   
                特征：   箭头函数中的this指向的是上一级对象
	
对象
	对象表达式:
     1.es6中对象的属性简写   
	说明:当对象外部声明的变量名和要赋值的属性名相同  这个属性可以简写
	   let k = 0;
	   let a = 1;
       let es6obj = {
		k,
		a
	   }
	   
     2.es6对象中方法的缩写
	   let es6obj = {
		hell(){
			
		}
	   }
      
     3.es6对象中属性名表达式
	let c = "sex"
	let es6_obj = {
		name: '张三',
		[c]:"男"
	}
      4.super关键字和this关键字的区别:
	this 指向的是当前对象    super 指向的是当前对象的原型对象,super关键子只能在对象的函数中使用  
字符串的拓展  
     1.模块字符串
             定义:` `
             模块字符串中写js代码   ${}

2.Set和Map数据结构  
     Set数据结构的特点:没有键名，只有键值，成员的值都是唯一的
	 Set数据结构定义: 
		let a = new Set()  
	 Set数据结构常用的方法和属性: 
		属性: 
			size:元素的个数
		方法:
			add: 添加数据
			delete(value):	删除某个值
			has(value):	 该值是否为set中的成员
			clear():  清除元素中的值
		遍历: 
			for of 
			forEach
	
		
	Map	数据结构的特点：成员是以键值对的形式存储
	Map数据结构定义：
		let a = new Map()
	Map数据结构常用的方法和属性:
		属性:
			size:元素的个数 
		方法:
			set(key,value): 设置map集合中的数据
			get(key): 获取map集合中的数据
			has(key): 判断map集合中是否有对应的数据
			delete(key)： 删除某个值
			clear():  清除
		遍历：
			for of 
			forEach
